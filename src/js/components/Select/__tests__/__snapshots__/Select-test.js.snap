// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select 0 value 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="test select"
          readOnly={true}
          tabIndex="-1"
          type="text"
          value={0}
        />
      </div>
    </div>
    <div
      className="c7 c8"
    >
      <svg
        aria-label="FormDown"
        className="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select a11yTitle 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          aria-label="aria-test"
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7 c8"
    >
      <svg
        aria-label="FormDown"
        className="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select applies custom global.hover theme to options 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="applies-custom-hover-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="applies-custom-hover-style"
            id="applies-custom-hover-style-id__input"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select applies custom global.hover theme to options 2`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c0:hover {
  background-color: #dfdfdf;
  color: #E15151;
}

.c3 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  display: block;
  width: 100%;
  background: #dfdfdf;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c2 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  class="c0 c1"
  role="menuitem"
  tabindex="-1"
  type="button"
>
  <div
    class="c2 "
  >
    <span
      class="c3"
    >
      afternoon
    </span>
  </div>
</button>
`;

exports[`Select basic 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7 c8"
    >
      <svg
        aria-label="FormDown"
        className="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-sc-1hmw3c5-0 iOsBTY Select__StyledSelectDropButton-f4amc3-1 dFkKbe"
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-1etxkdl-0 kERkim"
  >
    <div
      class="StyledBox-sc-1etxkdl-0 JHxNU"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-ilbntv-1 caQufR"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-ilbntv-0 gGtFPx Select__SelectTextInput-f4amc3-0 bspVuW"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-1etxkdl-0 inGXCS Select__StyledIconContainer-f4amc3-2 YnYLf"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-ofa7kd-0 fusfJv"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 3`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
  margin-top: 4px;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <span>
          one
        </span>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <span>
          two
        </span>
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select complex options and children 4`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select deselect an option 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="one"
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select disabled 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  disabled=""
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select applies custom global.hover theme to options 2`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c3 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c0:hover {
  background-color: lightgreen;
  color: #7D4CDB;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c1 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c2 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  aria-label="Open Drop"
  class="StyledButton-sc-1hmw3c5-0 kOrMhO Select__StyledSelectDropButton-f4amc3-1 dFkKbe"
  disabled=""
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-1etxkdl-0 kERkim"
  >
    <span
      class="c3"
    >
      afternoon
    </span>
  </div>
</button>
`;

exports[`Select basic 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Select"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-ilbntv-1 caQufR"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-ilbntv-0 gGtFPx Select__SelectTextInput-f4amc3-0 bspVuW"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-1etxkdl-0 inGXCS Select__StyledIconContainer-f4amc3-2 YnYLf"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-ofa7kd-0 fusfJv"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-sc-323bzc-0 dsmCNz Select__StyledSelectDropButton-sc-17idtfo-2 ieyOmu"
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-13pk1d4-0 jmuHez"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 iAryDB"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 dpaJQp"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-sc-1x30a0s-0 duVzSE Select__SelectTextInput-sc-17idtfo-0 bIurki"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-13pk1d4-0 eA-DBEo"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-ofa7kd-0 fuviCN"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 3`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <span>
          one
        </span>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <span>
          two
        </span>
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select complex options and children 4`] = `
"@media only screen and (max-width: 768px) {
  .eA-DBEo {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select dark 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #6FFFB0;
  stroke: #6FFFB0;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #333333;
  color: #f8f8f8;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus > circle,
.c2:focus > ellipse,
.c2:focus > line,
.c2:focus > path,
.c2:focus > polygon,
.c2:focus > polyline,
.c2:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) > circle,
.c2:focus:not(:focus-visible) > ellipse,
.c2:focus:not(:focus-visible) > line,
.c2:focus:not(:focus-visible) > path,
.c2:focus:not(:focus-visible) > polygon,
.c2:focus:not(:focus-visible) > polyline,
.c2:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(255,255,255,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(255,255,255,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <button
      aria-label="Open Drop"
      className="c2 c3"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      <div
        className="c4"
      >
        <div
          className="c5"
        >
          <div
            className="c6"
          >
            <input
              autoComplete="off"
              className="c7 c8"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              placeholder="Select"
              readOnly={true}
              tabIndex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          className="c9"
          style={
            Object {
              "minWidth": "auto",
            }
          }
        >
          <svg
            aria-label="FormDown"
            className="c10"
            viewBox="0 0 24 24"
          >
            <polyline
              fill="none"
              points="18 9 12 15 6 9"
              stroke="#000"
              strokeWidth="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</div>
`;

exports[`Select default value 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select default value clear 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  background: #33333310;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c6 {
  font-size: 18px;
  line-height: 24px;
  color: #555555;
}

.c11 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c4:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) > circle,
.c4:focus:not(:focus-visible) > ellipse,
.c4:focus:not(:focus-visible) > line,
.c4:focus:not(:focus-visible) > path,
.c4:focus:not(:focus-visible) > polygon,
.c4:focus:not(:focus-visible) > polyline,
.c4:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c8:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c8:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible) > circle,
.c8:focus:not(:focus-visible) > ellipse,
.c8:focus:not(:focus-visible) > line,
.c8:focus:not(:focus-visible) > path,
.c8:focus:not(:focus-visible) > polygon,
.c8:focus:not(:focus-visible) > polyline,
.c8:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c7 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c12 {
  background-color: #7D4CDB;
  color: #FFFFFF;
}

.c9 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c5 {
    padding: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c10 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <button
      class="c4"
      type="button"
    >
      <div
        class="c5"
      >
        <span
          class="c6"
        >
          Clear selection
        </span>
      </div>
    </button>
    <div
      class="c7"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c8 c9"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c10 "
        >
          <span
            class="c11"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c8 c9"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c10 c12"
        >
          <span
            class="c11"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c13"
      />
    </div>
  </div>
</div>
`;

exports[`Select default value clear 2`] = `
"@media only screen and (max-width: 768px) {
  .eA-DBEo {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select default value object options 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select disabled 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: default;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  disabled=""
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select disabled 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-sc-323bzc-0 eyQMsp Select__StyledSelectDropButton-sc-17idtfo-2 ieyOmu"
  disabled=""
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-13pk1d4-0 jmuHez"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 iAryDB"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 dpaJQp"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-sc-1x30a0s-0 duVzSE Select__SelectTextInput-sc-17idtfo-0 cANsmG"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-13pk1d4-0 eA-DBEo"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-ofa7kd-0 fuviCN"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select disabled key 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select disabled key 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c9:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c9:focus > circle,
.c9:focus > ellipse,
.c9:focus > line,
.c9:focus > path,
.c9:focus > polygon,
.c9:focus > polyline,
.c9:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c9:focus::-moz-focus-inner {
  border: 0;
}

.c9:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) > circle,
.c9:focus:not(:focus-visible) > ellipse,
.c9:focus:not(:focus-visible) > line,
.c9:focus:not(:focus-visible) > path,
.c9:focus:not(:focus-visible) > polygon,
.c9:focus:not(:focus-visible) > polyline,
.c9:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        disabled=""
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 SelectContainer__OptionBox-sc-1wi0ul8-1"
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c9 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 SelectContainer__OptionBox-sc-1wi0ul8-1"
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c10"
      />
    </div>
  </div>
</button>
`;

exports[`Select empty results search 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 2px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c11 {
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
  margin-top: 4px;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  font-size: 9.333333333333334px;
  line-height: 13.333333333333334px;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c9:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) > circle,
.c9:focus:not(:focus-visible) > ellipse,
.c9:focus:not(:focus-visible) > line,
.c9:focus:not(:focus-visible) > path,
.c9:focus:not(:focus-visible) > polygon,
.c9:focus:not(:focus-visible) > polyline,
.c9:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c7 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c9 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c4 {
    padding: 2px;
  }
}

@media only screen and (max-width:512px) {
  .c10 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
    >
      <div
        class="c5"
      >
        <input
          autocomplete="off"
          class="c6"
          type="search"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c8 c9"
        disabled=""
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c10 "
        >
          <span
            class="c11"
          >
            no results
          </span>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Select large drop container height 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
  margin-top: 4px;
}

.c3 {
  max-height: 512px;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select medium drop container height 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: 256px;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select modifies select control style on open 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  background: purple;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-open-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-open"
            id="test-open-id__input"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select multiple 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7 c8"
    >
      <svg
        aria-label="FormDown"
        className="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple onChange toggle with valueKey reduce 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="Value1"
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select multiple onChange toggle with valueKey reduce 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c9 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
  margin-top: 4px;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c8 {
  background-color: #4b4d59;
  color: #FFFFFF;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 c8"
        >
          <span
            class="c9"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c9"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c10"
      />
    </div>
  </div>
</div>
`;

exports[`Select multiple onChange toggle with valueKey reduce 3`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select multiple onChange with valueKey reduce 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select multiple onChange with valueKey reduce 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select multiple onChange with valueKey reduce 3`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select onChange with valueLabel 1`] = `
.c7 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c7 g {
  fill: inherit;
  stroke: inherit;
}

.c7 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c7 *[stroke*="#"],
.c7 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c7 *[fill-rule],
.c7 *[FILL-RULE],
.c7 *[fill*="#"],
.c7 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c5 {
  display: none;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c6 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <span>
          none
        </span>
        <input
          class="c5"
          id="test-select__input"
          readonly=""
          type="text"
          value=""
        />
      </div>
      <div
        class="c6"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c7"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange with valueLabel 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange with valueLabel 3`] = `
"@media only screen and (max-width: 768px) {
  .eA-DBEo {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select onChange without valueKey 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange without valueKey 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 12px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 SelectContainer__OptionBox-sc-1wi0ul8-1"
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 SelectContainer__OptionBox-sc-1wi0ul8-1"
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange without valueKey 3`] = `
"@media only screen and (max-width: 768px) {
  .eA-DBEo {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select prop: onClose 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width:768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple onChange with valueKey string 3`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select multiple onChange without valueKey 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select multiple onChange without valueKey 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
  margin-top: 4px;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select multiple onChange without valueKey 3`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select multiple onChange without valueKey 4`] = `
<div
  class="StyledBox-sc-1etxkdl-0 ipAPVu StyledDrop-sc-1o13o3c-0 fWOtdo"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-1etxkdl-0 iRTtrq StyledSelect__StyledContainer-f9kyye-0 jygtL"
    id="test-select__select-drop"
  >
    <div
      class="SelectContainer__OptionsBox-sc-64fnsh-0 ktkaWs"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="StyledButton-sc-1hmw3c5-0 ggvPvt SelectContainer__SelectOption-sc-64fnsh-2 iLntDW"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="StyledBox-sc-1etxkdl-0 kiHILE SelectContainer__OptionBox-sc-64fnsh-1 iHiciX"
        >
          <span
            class="StyledText-sc-3e83s1-0 bGpXTA"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="StyledButton-sc-1hmw3c5-0 ggvPvt SelectContainer__SelectOption-sc-64fnsh-2 iLntDW"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="StyledBox-sc-1etxkdl-0 kiHILE SelectContainer__OptionBox-sc-64fnsh-1 iHiciX"
        >
          <span
            class="StyledText-sc-3e83s1-0 bGpXTA"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="StyledBox-sc-1etxkdl-0 yoXMd"
      />
    </div>
  </div>
</div>
`;

exports[`Select multiple onChange without valueKey 5`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select multiple values 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="multiple"
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple values 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-sc-323bzc-0 dsmCNz Select__StyledSelectDropButton-sc-17idtfo-2 ieyOmu"
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-1etxkdl-0 kERkim"
  >
    <div
      class="StyledBox-sc-1etxkdl-0 JHxNU"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-ilbntv-1 caQufR"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-sc-1x30a0s-0 duVzSE Select__SelectTextInput-sc-17idtfo-0 bIurki"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="multiple"
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-1etxkdl-0 inGXCS Select__StyledIconContainer-f4amc3-2 YnYLf"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-ofa7kd-0 fusfJv"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select multiple values 3`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c9 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c8 {
  background-color: #4b4d59;
  color: #FFFFFF;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 c8"
        >
          <span
            class="c9"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 c8"
        >
          <span
            class="c9"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c10"
      />
    </div>
  </div>
</div>
`;

exports[`Select multiple values 4`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select prop: onOpen 5`] = `
<div
  class="SelectContainer__OptionsBox-sc-1wi0ul8-0 jITnOq"
  role="menubar"
  tabindex="-1"
>
  <button
    class="StyledButton-sc-323bzc-0 ksFFvX SelectContainer__SelectOption-sc-1wi0ul8-2 kNOKDt"
    role="menuitem"
    tabindex="-1"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 kNEzzP SelectContainer__OptionBox-sc-1wi0ul8-1"
    >
      <span
        class="StyledText-sc-1sadyjn-0 fEvqji"
      >
        one
      </span>
    </div>
  </button>
  <button
    class="StyledButton-sc-323bzc-0 ksFFvX SelectContainer__SelectOption-sc-1wi0ul8-2 kNOKDt"
    role="menuitem"
    tabindex="-1"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 kNEzzP SelectContainer__OptionBox-sc-1wi0ul8-1"
    >
      <span
        class="StyledText-sc-1sadyjn-0 fEvqji"
      >
        two
      </span>
    </div>
  </button>
  <div
    class="StyledBox-sc-13pk1d4-0 jCbIzQ"
  />
</div>
`;

exports[`Select renders custom icon 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange with valueKey string 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
  margin-top: 4px;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange with valueKey string 3`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select onChange without valueKey 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders custom up and down icons 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 djOnwZ"
>
  <button
    aria-label="Open Drop"
    class="StyledButton-sc-323bzc-0 dsmCNz Select__StyledSelectDropButton-sc-17idtfo-2 ieyOmu"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 jmuHez"
    >
      <div
        class="StyledBox-sc-13pk1d4-0 iAryDB"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 dpaJQp"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-sc-1x30a0s-0 duVzSE Select__SelectTextInput-sc-17idtfo-0 bIurki"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-13pk1d4-0 eA-DBEo"
        style="min-width: auto;"
      >
        .c0 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c0 g {
  fill: inherit;
  stroke: inherit;
}

.c0 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c0 *[stroke*="#"],
.c0 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c0 *[fill-rule],
.c0 *[FILL-RULE],
.c0 *[fill*="#"],
.c0 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange without valueKey 2`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value1
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            Value2
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange without valueKey 3`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select opens 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select opens 2`] = `
<button
  aria-label="Open Drop"
  class="StyledButton-sc-1hmw3c5-0 iOsBTY Select__StyledSelectDropButton-f4amc3-1 dFkKbe"
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-1etxkdl-0 kERkim"
  >
    <div
      class="StyledBox-sc-1etxkdl-0 JHxNU"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-ilbntv-1 caQufR"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-ilbntv-0 gGtFPx Select__SelectTextInput-f4amc3-0 bspVuW"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-1etxkdl-0 inGXCS Select__StyledIconContainer-f4amc3-2 YnYLf"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-ofa7kd-0 fusfJv"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select opens 3`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select opens 4`] = `
"@media only screen and (max-width:512px) {
  .inGXCS {
    margin-left: 4px;
    margin-right: 4px;
  }
}"
`;

exports[`Select opens 5`] = `
<div
  class="SelectContainer__OptionsBox-sc-64fnsh-0 ktkaWs"
  role="menubar"
  tabindex="-1"
>
  <button
    class="StyledButton-sc-1hmw3c5-0 ggvPvt SelectContainer__SelectOption-sc-64fnsh-2 iLntDW"
    role="menuitem"
    tabindex="-1"
    type="button"
  >
    <div
      class="StyledBox-sc-1etxkdl-0 kiHILE SelectContainer__OptionBox-sc-64fnsh-1 iHiciX"
    >
      <span
        class="StyledText-sc-3e83s1-0 bGpXTA"
      >
        one
      </span>
    </div>
  </button>
  <button
    class="StyledButton-sc-1hmw3c5-0 ggvPvt SelectContainer__SelectOption-sc-64fnsh-2 iLntDW"
    role="menuitem"
    tabindex="-1"
    type="button"
  >
    <div
      class="StyledBox-sc-1etxkdl-0 kiHILE SelectContainer__OptionBox-sc-64fnsh-1 iHiciX"
    >
      <span
        class="StyledText-sc-3e83s1-0 bGpXTA"
      >
        two
      </span>
    </div>
  </button>
  <div
    class="StyledBox-sc-1etxkdl-0 yoXMd"
  />
</div>
`;

exports[`Select renders custom icon 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-options-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-options-2"
            id="test-options-style-id__input"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders without icon 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7 c8"
    >
      <svg
        aria-label="CaretDown"
        className="c9"
        viewBox="0 0 24 24"
      >
        <polygon
          fill="none"
          points="22 8 12 20 2 8"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select renders custom up and down icons 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders custom up and down icons 2`] = `
<div
  class="StyledMnetUIBase-sc-17lh5y2-0 HlCER"
>
  <button
    aria-label="Open Drop"
    class="StyledButton-sc-1hmw3c5-0 iOsBTY Select__StyledSelectDropButton-f4amc3-1 dFkKbe"
    type="button"
  >
    <div
      class="StyledBox-sc-1etxkdl-0 kERkim"
    >
      <div
        class="StyledBox-sc-1etxkdl-0 JHxNU"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-ilbntv-1 caQufR"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-ilbntv-0 gGtFPx Select__SelectTextInput-f4amc3-0 bspVuW"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-1etxkdl-0 inGXCS Select__StyledIconContainer-f4amc3-2 YnYLf"
      >
        .c0 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c0 g {
  fill: inherit;
  stroke: inherit;
}

.c0 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c0 *[stroke*="#"],
.c0 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c0 *[fill-rule],
.c0 *[FILL-RULE],
.c0 *[fill*="#"],
.c0 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<svg
          aria-label="CaretUp"
          class="c0"
          viewBox="0 0 24 24"
        >
          <polygon
            fill="none"
            points="22 4 12 16 2 4"
            stroke="#000"
            stroke-width="2"
            transform="matrix(1 0 0 -1 0 20)"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders default icon 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c11 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c8:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c8:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible) > circle,
.c8:focus:not(:focus-visible) > ellipse,
.c8:focus:not(:focus-visible) > line,
.c8:focus:not(:focus-visible) > path,
.c8:focus:not(:focus-visible) > polygon,
.c8:focus:not(:focus-visible) > polyline,
.c8:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7 c8"
    >
      <svg
        aria-label="FormDown"
        className="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`Select search 3`] = `
"@media only screen and (max-width: 768px) {
  .eA-DBEo {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select search 4`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 gZAijB"
  type="search"
  value=""
/>
`;

exports[`Select search 5`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 gZAijB"
  type="search"
  value="o"
/>
`;

exports[`Select renders styled select options backwards compatible with legacy
    documentation (select.options.box) 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-options-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-options-1"
            id="test-options-style-id__input"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders styled select options combining select.options.box &&
  select.options.container;
  select.options.container prioritized if conflict 1`] = `
.c10 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c11 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c8:hover {
  background-color: rgba(221,221,221,0.4);
  color: #000000;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c8:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible) > circle,
.c8:focus:not(:focus-visible) > ellipse,
.c8:focus:not(:focus-visible) > line,
.c8:focus:not(:focus-visible) > path,
.c8:focus:not(:focus-visible) > polygon,
.c8:focus:not(:focus-visible) > polyline,
.c8:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-options-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-options-3"
            id="test-options-style-id__input"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select search and select 3`] = `
"@media only screen and (max-width: 768px) {
  .eA-DBEo {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`Select search and select 4`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 gZAijB"
  type="search"
  value=""
/>
`;

exports[`Select search and select 5`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 gZAijB"
  type="search"
  value="t"
/>
`;

exports[`Select select an object with label key specific with keypress 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c10 *[stroke*="#"],
.c10 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*="#"],
.c10 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-placeholder {
  color: #e0e4ee;
}

.c6:-ms-input-placeholder {
  color: #e0e4ee;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c9 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c8 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-options-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-options-2"
            id="test-options-style-id__input"
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8 c9"
      >
        <svg
          aria-label="FormDown"
          class="c10"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders without icon 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select an option with complex options 1`] = `
.c5 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c5 g {
  fill: inherit;
  stroke: inherit;
}

.c5 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c5 *[stroke*="#"],
.c5 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c5 *[fill-rule],
.c5 *[FILL-RULE],
.c5 *[fill*="#"],
.c5 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  display: none;
}

@media only screen and (max-width:768px) {
  .c4 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 "
  id="test-select"
  type="button"
>
  <div
    class="c1"
  >
    <div
      class="c2"
    >
      <span>
        one
      </span>
      <input
        class="c3"
        id="test-select__input"
        readonly=""
        type="text"
        value=""
      />
    </div>
    <div
      class="c4"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c5"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select an option with enter 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*="#"],
.c8 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select an option with keypress 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c8 *[stroke*="#"],
.c8 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 2px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c8:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c11 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #ffffff;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
  margin-top: 4px;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  font-size: 9.333333333333334px;
  line-height: 13.333333333333334px;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5 {
  position: relative;
  width: 100%;
}

.c3 {
  max-height: inherit;
}

.c7 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c9 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c4 {
    padding: 2px;
  }
}

@media only screen and (max-width:512px) {
  .c10 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
    >
      <div
        class="c5"
      >
        <input
          autocomplete="off"
          class="c6"
          type="search"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c8 c9"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c10 "
        >
          <span
            class="c11"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c8 c9"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c10 "
        >
          <span
            class="c11"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c12"
      />
    </div>
  </div>
</div>
`;

exports[`Select select on multiple keydown always picks first enabled option 1`] = `
.c8 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select option by typing should not break if caller passes JSX 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0,0,0,0.33);
  border-radius: 4px;
}

@media only screen and (max-width:768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select option by typing should not break if caller passes JSX 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 djOnwZ"
>
  <button
    aria-label="Open Drop"
    class="StyledButton-sc-323bzc-0 dsmCNz Select__StyledSelectDropButton-sc-17idtfo-2 ieyOmu"
    id="test-select"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 jmuHez"
    >
      <div
        class="StyledBox-sc-13pk1d4-0 iAryDB"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 dpaJQp"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-sc-1x30a0s-0 duVzSE Select__SelectTextInput-sc-17idtfo-0 bIurki"
            id="test-select__input"
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-13pk1d4-0 eA-DBEo"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="StyledIcon-ofa7kd-0 fuviCN"
          viewBox="0 0 24 24"
        >
          <polyline
            fill="none"
            points="18 9 12 15 6 9"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select an option with enter 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select select another option 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus > circle,
.c1:focus > ellipse,
.c1:focus > line,
.c1:focus > path,
.c1:focus > polygon,
.c1:focus > polyline,
.c1:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) > circle,
.c1:focus:not(:focus-visible) > ellipse,
.c1:focus:not(:focus-visible) > line,
.c1:focus:not(:focus-visible) > path,
.c1:focus:not(:focus-visible) > polygon,
.c1:focus:not(:focus-visible) > polyline,
.c1:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  outline: none;
  border: none;
  box-shadow: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <button
    aria-label="test"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value="two"
        />
      </div>
    </div>
    <div
      class="c7 c8"
    >
      <svg
        aria-label="FormDown"
        class="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select size 1`] = `
.c9 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 48px;
  height: 48px;
  fill: #FFFFFF;
  stroke: #FFFFFF;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c9 *[stroke*="#"],
.c9 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*="#"],
.c9 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 4px;
  margin-right: 4px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus > circle,
.c0:focus > ellipse,
.c0:focus > line,
.c0:focus > path,
.c0:focus > polygon,
.c0:focus > polyline,
.c0:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) > circle,
.c0:focus:not(:focus-visible) > ellipse,
.c0:focus:not(:focus-visible) > line,
.c0:focus:not(:focus-visible) > path,
.c0:focus:not(:focus-visible) > polygon,
.c0:focus:not(:focus-visible) > polyline,
.c0:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  box-shadow: inset 1px 1px 1px 0 #cdd3e3;
  padding: 7px;
  font-weight: 600;
  margin: 0;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
  width: 100%;
  font-size: 14.666666666666666px;
  line-height: 18.666666666666668px;
  outline: none;
  border: none;
  box-shadow: none;
}

.c5::-webkit-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-placeholder {
  color: #e0e4ee;
}

.c5:-ms-input-placeholder {
  color: #e0e4ee;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  background: #4b4d59;
  border: 1px solid #cdd3e3;
  border-radius: 4px;
}

.c8 {
  min-width: auto;
}

@media only screen and (max-width:512px) {
  .c7 {
    margin-left: 4px;
    margin-right: 4px;
  }
}

<button
  aria-label="Open Drop"
  className="c0 c1"
  id="test-select"
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  type="button"
>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6"
          id="test-select__input"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          readOnly={true}
          size="large"
          tabIndex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="c7 c8"
    >
      <svg
        aria-label="FormDown"
        className="c9"
        viewBox="0 0 24 24"
      >
        <polyline
          fill="none"
          points="18 9 12 15 6 9"
          stroke="#000"
          strokeWidth="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select small drop container height 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0,0,0,0.20);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 4px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 0px;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-animation: kPQHBD 0.1s forwards;
  animation: kPQHBD 0.1s forwards;
  -webkit-animation-delay: 0.01s;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:hover {
  background-color: #dfdfdf;
  color: #000000;
}

.c8 {
  margin: 0px;
  font-size: 12px;
  line-height: 16px;
}

.c1 {
  font-size: 12px;
  line-height: 16px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) > circle,
.c5:focus:not(:focus-visible) > ellipse,
.c5:focus:not(:focus-visible) > line,
.c5:focus:not(:focus-visible) > path,
.c5:focus:not(:focus-visible) > polygon,
.c5:focus:not(:focus-visible) > polyline,
.c5:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible)::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: 128px;
}

.c4 {
  position: relative;
  -webkit-scroll-behavior: smooth;
  -moz-scroll-behavior: smooth;
  -ms-scroll-behavior: smooth;
  scroll-behavior: smooth;
  overflow: auto;
}

.c6 {
  display: block;
  width: 100%;
  background: transparent;
}

@media only screen and (max-width:512px) {

}

@media only screen and (max-width:512px) {
  .c7 {
    padding: 4px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: stretch;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="menubar"
      tabindex="-1"
    >
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            one
          </span>
        </div>
      </button>
      <button
        class="c5 c6"
        role="menuitem"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7 "
        >
          <span
            class="c8"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;
